{"ast":null,"code":"import moment from \"moment\";\nimport { DateFormats } from \"../date-formats\";\nimport { getDiffInMinutes } from \"../time\";\nexport function southBeverlyGrillCalculator(props, extraInterval) {\n  let minutes = getDiffInMinutes(props.startTime, props.endTime);\n  let amount = 10;\n  if (minutes > extraInterval) {\n    minutes -= extraInterval;\n    const intervals = Math.ceil(minutes / props.parkingLot.intervalMin);\n    amount += intervals * props.parkingLot.intervalAmount;\n  }\n  if (amount >= props.parkingLot.max) amount = props.parkingLot.max;else if (amount <= props.parkingLot.min) amount = props.parkingLot.min;\n  return {\n    parkingLot: props.parkingLot,\n    startTime: moment(props.startTime).format(DateFormats.TIME),\n    endTime: moment(props.endTime).format(DateFormats.TIME),\n    discount: 0,\n    amount: amount\n  };\n}","map":{"version":3,"names":["moment","DateFormats","getDiffInMinutes","southBeverlyGrillCalculator","props","extraInterval","minutes","startTime","endTime","amount","intervals","Math","ceil","parkingLot","intervalMin","intervalAmount","max","min","format","TIME","discount"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/utils/calculator/south-beverly-grill.ts"],"sourcesContent":["import moment from \"moment\";\nimport { CalculatorResult } from \"../../interfaces/calculator-result\";\nimport { CalculatorHandlerProps } from \"./handler\";\nimport { DateFormats } from \"../date-formats\";\nimport { getDiffInMinutes } from \"../time\";\n\nexport function southBeverlyGrillCalculator(\n  props: CalculatorHandlerProps,\n  extraInterval: number\n): CalculatorResult {\n  let minutes = getDiffInMinutes(props.startTime, props.endTime);\n  let amount = 10;\n\n  if (minutes > extraInterval) {\n    minutes -= extraInterval;\n\n    const intervals: number = Math.ceil(minutes / props.parkingLot.intervalMin);\n    amount += intervals * props.parkingLot.intervalAmount;\n  }\n\n  if (amount >= props.parkingLot.max) amount = props.parkingLot.max;\n  else if (amount <= props.parkingLot.min) amount = props.parkingLot.min;\n\n  return {\n    parkingLot: props.parkingLot,\n    startTime: moment(props.startTime).format(DateFormats.TIME),\n    endTime: moment(props.endTime).format(DateFormats.TIME),\n    discount: 0,\n    amount: amount,\n  };\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAG3B,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,gBAAgB,QAAQ,SAAS;AAE1C,OAAO,SAASC,2BAA2BA,CACzCC,KAA6B,EAC7BC,aAAqB,EACH;EAClB,IAAIC,OAAO,GAAGJ,gBAAgB,CAACE,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACI,OAAO,CAAC;EAC9D,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAIH,OAAO,GAAGD,aAAa,EAAE;IAC3BC,OAAO,IAAID,aAAa;IAExB,MAAMK,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACN,OAAO,GAAGF,KAAK,CAACS,UAAU,CAACC,WAAW,CAAC;IAC3EL,MAAM,IAAIC,SAAS,GAAGN,KAAK,CAACS,UAAU,CAACE,cAAc;EACvD;EAEA,IAAIN,MAAM,IAAIL,KAAK,CAACS,UAAU,CAACG,GAAG,EAAEP,MAAM,GAAGL,KAAK,CAACS,UAAU,CAACG,GAAG,CAAC,KAC7D,IAAIP,MAAM,IAAIL,KAAK,CAACS,UAAU,CAACI,GAAG,EAAER,MAAM,GAAGL,KAAK,CAACS,UAAU,CAACI,GAAG;EAEtE,OAAO;IACLJ,UAAU,EAAET,KAAK,CAACS,UAAU;IAC5BN,SAAS,EAAEP,MAAM,CAACI,KAAK,CAACG,SAAS,CAAC,CAACW,MAAM,CAACjB,WAAW,CAACkB,IAAI,CAAC;IAC3DX,OAAO,EAAER,MAAM,CAACI,KAAK,CAACI,OAAO,CAAC,CAACU,MAAM,CAACjB,WAAW,CAACkB,IAAI,CAAC;IACvDC,QAAQ,EAAE,CAAC;IACXX,MAAM,EAAEA;EACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}