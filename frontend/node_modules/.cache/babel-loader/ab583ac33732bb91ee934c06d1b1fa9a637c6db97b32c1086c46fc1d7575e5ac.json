{"ast":null,"code":"import moment from \"moment\";\nimport { getDiffInMinutes } from \"../time\";\nimport { DateFormats } from \"../date-formats\";\nexport function defaultCalculator(props) {\n  const minutes = getDiffInMinutes(props.startTime, props.endTime);\n  const intervals = Math.ceil(minutes / props.parkingLot.intervalMin);\n  let amount = intervals * props.parkingLot.intervalAmount;\n  let discount = 0;\n  props.parkingLot.validations.filter(v => v.active).forEach(v => discount += v.amount);\n  amount -= discount;\n  if (amount >= props.parkingLot.max) amount = props.parkingLot.max;else if (amount <= props.parkingLot.min) amount = props.parkingLot.min;\n  return {\n    parkingLot: props.parkingLot,\n    startTime: moment(props.startTime).format(DateFormats.TIME),\n    endTime: moment(props.endTime).format(DateFormats.TIME),\n    discount: discount,\n    amount: amount\n  };\n}","map":{"version":3,"names":["moment","getDiffInMinutes","DateFormats","defaultCalculator","props","minutes","startTime","endTime","intervals","Math","ceil","parkingLot","intervalMin","amount","intervalAmount","discount","validations","filter","v","active","forEach","max","min","format","TIME"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/utils/calculator/default.ts"],"sourcesContent":["import moment from \"moment\";\nimport { CalculatorResult } from \"../../interfaces/calculator-result\";\nimport { getDiffInMinutes } from \"../time\";\nimport { CalculatorHandlerProps } from \"./handler\";\nimport { DateFormats } from \"../date-formats\";\n\nexport function defaultCalculator(\n  props: CalculatorHandlerProps\n): CalculatorResult {\n  const minutes = getDiffInMinutes(props.startTime, props.endTime);\n\n  const intervals: number = Math.ceil(minutes / props.parkingLot.intervalMin);\n  let amount: number = intervals * props.parkingLot.intervalAmount;\n\n  let discount: number = 0;\n  props.parkingLot.validations\n    .filter((v) => v.active)\n    .forEach((v) => (discount += v.amount));\n\n  amount -= discount;\n\n  if (amount >= props.parkingLot.max) amount = props.parkingLot.max;\n  else if (amount <= props.parkingLot.min) amount = props.parkingLot.min;\n\n  return {\n    parkingLot: props.parkingLot,\n    startTime: moment(props.startTime).format(DateFormats.TIME),\n    endTime: moment(props.endTime).format(DateFormats.TIME),\n    discount: discount,\n    amount: amount,\n  };\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,SAASC,gBAAgB,QAAQ,SAAS;AAE1C,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,OAAO,SAASC,iBAAiBA,CAC/BC,KAA6B,EACX;EAClB,MAAMC,OAAO,GAAGJ,gBAAgB,CAACG,KAAK,CAACE,SAAS,EAAEF,KAAK,CAACG,OAAO,CAAC;EAEhE,MAAMC,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACL,OAAO,GAAGD,KAAK,CAACO,UAAU,CAACC,WAAW,CAAC;EAC3E,IAAIC,MAAc,GAAGL,SAAS,GAAGJ,KAAK,CAACO,UAAU,CAACG,cAAc;EAEhE,IAAIC,QAAgB,GAAG,CAAC;EACxBX,KAAK,CAACO,UAAU,CAACK,WAAW,CACzBC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAC,CACvBC,OAAO,CAAEF,CAAC,IAAMH,QAAQ,IAAIG,CAAC,CAACL,MAAO,CAAC;EAEzCA,MAAM,IAAIE,QAAQ;EAElB,IAAIF,MAAM,IAAIT,KAAK,CAACO,UAAU,CAACU,GAAG,EAAER,MAAM,GAAGT,KAAK,CAACO,UAAU,CAACU,GAAG,CAAC,KAC7D,IAAIR,MAAM,IAAIT,KAAK,CAACO,UAAU,CAACW,GAAG,EAAET,MAAM,GAAGT,KAAK,CAACO,UAAU,CAACW,GAAG;EAEtE,OAAO;IACLX,UAAU,EAAEP,KAAK,CAACO,UAAU;IAC5BL,SAAS,EAAEN,MAAM,CAACI,KAAK,CAACE,SAAS,CAAC,CAACiB,MAAM,CAACrB,WAAW,CAACsB,IAAI,CAAC;IAC3DjB,OAAO,EAAEP,MAAM,CAACI,KAAK,CAACG,OAAO,CAAC,CAACgB,MAAM,CAACrB,WAAW,CAACsB,IAAI,CAAC;IACvDT,QAAQ,EAAEA,QAAQ;IAClBF,MAAM,EAAEA;EACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}