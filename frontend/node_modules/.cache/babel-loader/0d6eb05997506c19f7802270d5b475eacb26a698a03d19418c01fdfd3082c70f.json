{"ast":null,"code":"var _jsxFileName = \"/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/views/render/validations.tsx\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RenderValidations = props => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 2,\n    className: \"cell-list\",\n    children: props.presets.filter(p => p.active).map(p => p.validations.map((v, i) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n      className: \"p-2\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: v.active ? \"cell active\" : \"cell disabled\",\n        onClick: () => {\n          props.activateValidationByID(i);\n        },\n        children: v.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = RenderValidations;\nvar _c;\n$RefreshReg$(_c, \"RenderValidations\");","map":{"version":3,"names":["Container","Grid","jsxDEV","_jsxDEV","RenderValidations","props","columns","className","children","presets","filter","p","active","map","validations","v","i","Column","onClick","activateValidationByID","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/views/render/validations.tsx"],"sourcesContent":["import { Container, Grid } from \"semantic-ui-react\";\nimport { ParkingLot } from \"../../interfaces/parking-lot\";\n\nexport interface RenderValidationsProps {\n  presets: ParkingLot[];\n  activateValidationByID: Function;\n}\nexport const RenderValidations = (props: RenderValidationsProps) => {\n  return (\n    <Grid columns={2} className=\"cell-list\">\n      {props.presets\n        .filter((p) => p.active)\n        .map((p) =>\n          p.validations.map((v, i) => (\n            <Grid.Column className=\"p-2\">\n              <Container\n                className={v.active ? \"cell active\" : \"cell disabled\"}\n                onClick={() => {\n                  props.activateValidationByID(i);\n                }}\n                key={i}\n              >\n                {v.name}\n              </Container>\n            </Grid.Column>\n          ))\n        )}\n    </Grid>\n  );\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpD,OAAO,MAAMC,iBAAiB,GAAIC,KAA6B,IAAK;EAClE,oBACEF,OAAA,CAACF,IAAI;IAACK,OAAO,EAAE,CAAE;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACpCH,KAAK,CAACI,OAAO,CACXC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAC,CACvBC,GAAG,CAAEF,CAAC,IACLA,CAAC,CAACG,WAAW,CAACD,GAAG,CAAC,CAACE,CAAC,EAAEC,CAAC,kBACrBb,OAAA,CAACF,IAAI,CAACgB,MAAM;MAACV,SAAS,EAAC,KAAK;MAAAC,QAAA,eAC1BL,OAAA,CAACH,SAAS;QACRO,SAAS,EAAEQ,CAAC,CAACH,MAAM,GAAG,aAAa,GAAG,eAAgB;QACtDM,OAAO,EAAEA,CAAA,KAAM;UACbb,KAAK,CAACc,sBAAsB,CAACH,CAAC,CAAC;QACjC,CAAE;QAAAR,QAAA,EAGDO,CAAC,CAACK;MAAI,GAFFJ,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACd,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEX,CAAC;AAACC,EAAA,GAtBWrB,iBAAiB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}