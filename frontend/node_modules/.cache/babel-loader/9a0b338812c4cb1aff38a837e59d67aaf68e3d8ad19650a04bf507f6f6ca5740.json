{"ast":null,"code":"import moment from\"moment\";import{getDiffInMinutes}from\"../time\";import{DateFormats}from\"../date-formats\";export function defaultCalculator(props){var minutes=getDiffInMinutes(props.startTime,props.endTime);var intervals=Math.ceil(minutes/props.parkingLot.intervalMin);var amount=intervals*props.parkingLot.intervalAmount;var discount=0;props.parkingLot.validations.filter(function(v){return v.active;}).forEach(function(v){return discount+=v.amount;});amount-=discount;if(amount>=props.parkingLot.max)amount=props.parkingLot.max;else if(amount<=props.parkingLot.min)amount=props.parkingLot.min;return{parkingLot:props.parkingLot,startTime:moment(props.startTime).format(DateFormats.TIME),endTime:moment(props.endTime).format(DateFormats.TIME),discount:discount,amount:amount};}","map":{"version":3,"names":["moment","getDiffInMinutes","DateFormats","defaultCalculator","props","minutes","startTime","endTime","intervals","Math","ceil","parkingLot","intervalMin","amount","intervalAmount","discount","validations","filter","v","active","forEach","max","min","format","TIME"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/utils/calculator/default.ts"],"sourcesContent":["import moment from \"moment\";\nimport { CalculatorResult } from \"../../interfaces/calculator-result\";\nimport { getDiffInMinutes } from \"../time\";\nimport { CalculatorHandlerProps } from \"./handler\";\nimport { DateFormats } from \"../date-formats\";\n\nexport function defaultCalculator(\n  props: CalculatorHandlerProps\n): CalculatorResult {\n  const minutes = getDiffInMinutes(props.startTime, props.endTime);\n\n  const intervals: number = Math.ceil(minutes / props.parkingLot.intervalMin);\n  let amount: number = intervals * props.parkingLot.intervalAmount;\n\n  let discount: number = 0;\n  props.parkingLot.validations\n    .filter((v) => v.active)\n    .forEach((v) => (discount += v.amount));\n\n  amount -= discount;\n\n  if (amount >= props.parkingLot.max) amount = props.parkingLot.max;\n  else if (amount <= props.parkingLot.min) amount = props.parkingLot.min;\n\n  return {\n    parkingLot: props.parkingLot,\n    startTime: moment(props.startTime).format(DateFormats.TIME),\n    endTime: moment(props.endTime).format(DateFormats.TIME),\n    discount: discount,\n    amount: amount,\n  };\n}\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,QAAQ,CAE3B,OAASC,gBAAgB,KAAQ,SAAS,CAE1C,OAASC,WAAW,KAAQ,iBAAiB,CAE7C,MAAO,SAAS,CAAAC,iBAAiBA,CAC/BC,KAA6B,CACX,CAClB,GAAM,CAAAC,OAAO,CAAGJ,gBAAgB,CAACG,KAAK,CAACE,SAAS,CAAEF,KAAK,CAACG,OAAO,CAAC,CAEhE,GAAM,CAAAC,SAAiB,CAAGC,IAAI,CAACC,IAAI,CAACL,OAAO,CAAGD,KAAK,CAACO,UAAU,CAACC,WAAW,CAAC,CAC3E,GAAI,CAAAC,MAAc,CAAGL,SAAS,CAAGJ,KAAK,CAACO,UAAU,CAACG,cAAc,CAEhE,GAAI,CAAAC,QAAgB,CAAG,CAAC,CACxBX,KAAK,CAACO,UAAU,CAACK,WAAW,CACzBC,MAAM,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACC,MAAM,GAAC,CACvBC,OAAO,CAAC,SAACF,CAAC,QAAM,CAAAH,QAAQ,EAAIG,CAAC,CAACL,MAAM,EAAC,CAAC,CAEzCA,MAAM,EAAIE,QAAQ,CAElB,GAAIF,MAAM,EAAIT,KAAK,CAACO,UAAU,CAACU,GAAG,CAAER,MAAM,CAAGT,KAAK,CAACO,UAAU,CAACU,GAAG,CAAC,IAC7D,IAAIR,MAAM,EAAIT,KAAK,CAACO,UAAU,CAACW,GAAG,CAAET,MAAM,CAAGT,KAAK,CAACO,UAAU,CAACW,GAAG,CAEtE,MAAO,CACLX,UAAU,CAAEP,KAAK,CAACO,UAAU,CAC5BL,SAAS,CAAEN,MAAM,CAACI,KAAK,CAACE,SAAS,CAAC,CAACiB,MAAM,CAACrB,WAAW,CAACsB,IAAI,CAAC,CAC3DjB,OAAO,CAAEP,MAAM,CAACI,KAAK,CAACG,OAAO,CAAC,CAACgB,MAAM,CAACrB,WAAW,CAACsB,IAAI,CAAC,CACvDT,QAAQ,CAAEA,QAAQ,CAClBF,MAAM,CAAEA,MACV,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}