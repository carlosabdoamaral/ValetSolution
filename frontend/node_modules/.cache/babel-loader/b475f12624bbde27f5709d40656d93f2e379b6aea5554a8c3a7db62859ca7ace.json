{"ast":null,"code":"import moment from \"moment\";\nimport { DateFormats } from \"./date-formats\";\nexport const twoHours = 120;\nexport const hourAndHalf = 90;\nexport function getDiffInMinutes(startTime, endTime) {\n  const startTimeFormatted = moment(startTime, DateFormats.TIME_EXTENDED);\n  const endTimeFormatted = moment(endTime, DateFormats.TIME_EXTENDED);\n  const msDiff = startTimeFormatted.diff(endTimeFormatted);\n  const date = moment.duration(msDiff);\n  const minutes = date.asMinutes() * -1;\n  return minutes;\n}\nexport function getDiffInHours(startTime, endTime) {\n  const startTimeFormatted = moment(startTime, DateFormats.TIME_EXTENDED);\n  const endTimeFormatted = moment(endTime, DateFormats.TIME_EXTENDED);\n  const msDiff = startTimeFormatted.diff(endTimeFormatted);\n  const date = moment.duration(msDiff);\n  const diffMinutes = date.asMinutes() * -1;\n  return `${Math.floor(diffMinutes / 60)}h${diffMinutes % 60}m`;\n}","map":{"version":3,"names":["moment","DateFormats","twoHours","hourAndHalf","getDiffInMinutes","startTime","endTime","startTimeFormatted","TIME_EXTENDED","endTimeFormatted","msDiff","diff","date","duration","minutes","asMinutes","getDiffInHours","diffMinutes","Math","floor"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/utils/time.ts"],"sourcesContent":["import moment, { Duration } from \"moment\";\nimport { DateFormats } from \"./date-formats\";\n\nexport const twoHours = 120;\nexport const hourAndHalf = 90;\n\nexport function getDiffInMinutes(startTime: string, endTime: string): number {\n  const startTimeFormatted = moment(startTime, DateFormats.TIME_EXTENDED);\n  const endTimeFormatted = moment(endTime, DateFormats.TIME_EXTENDED);\n\n  const msDiff: number = startTimeFormatted.diff(endTimeFormatted);\n  const date: Duration = moment.duration(msDiff);\n  const minutes: number = date.asMinutes() * -1;\n\n  return minutes;\n}\n\nexport function getDiffInHours(startTime: string, endTime: string): string {\n  const startTimeFormatted = moment(startTime, DateFormats.TIME_EXTENDED);\n  const endTimeFormatted = moment(endTime, DateFormats.TIME_EXTENDED);\n\n  const msDiff: number = startTimeFormatted.diff(endTimeFormatted);\n  const date: Duration = moment.duration(msDiff);\n  const diffMinutes: number = date.asMinutes() * -1;\n\n  return `${Math.floor(diffMinutes / 60)}h${diffMinutes % 60}m`;\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAoB,QAAQ;AACzC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,QAAQ,GAAG,GAAG;AAC3B,OAAO,MAAMC,WAAW,GAAG,EAAE;AAE7B,OAAO,SAASC,gBAAgBA,CAACC,SAAiB,EAAEC,OAAe,EAAU;EAC3E,MAAMC,kBAAkB,GAAGP,MAAM,CAACK,SAAS,EAAEJ,WAAW,CAACO,aAAa,CAAC;EACvE,MAAMC,gBAAgB,GAAGT,MAAM,CAACM,OAAO,EAAEL,WAAW,CAACO,aAAa,CAAC;EAEnE,MAAME,MAAc,GAAGH,kBAAkB,CAACI,IAAI,CAACF,gBAAgB,CAAC;EAChE,MAAMG,IAAc,GAAGZ,MAAM,CAACa,QAAQ,CAACH,MAAM,CAAC;EAC9C,MAAMI,OAAe,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;EAE7C,OAAOD,OAAO;AAChB;AAEA,OAAO,SAASE,cAAcA,CAACX,SAAiB,EAAEC,OAAe,EAAU;EACzE,MAAMC,kBAAkB,GAAGP,MAAM,CAACK,SAAS,EAAEJ,WAAW,CAACO,aAAa,CAAC;EACvE,MAAMC,gBAAgB,GAAGT,MAAM,CAACM,OAAO,EAAEL,WAAW,CAACO,aAAa,CAAC;EAEnE,MAAME,MAAc,GAAGH,kBAAkB,CAACI,IAAI,CAACF,gBAAgB,CAAC;EAChE,MAAMG,IAAc,GAAGZ,MAAM,CAACa,QAAQ,CAACH,MAAM,CAAC;EAC9C,MAAMO,WAAmB,GAAGL,IAAI,CAACG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;EAEjD,OAAQ,GAAEG,IAAI,CAACC,KAAK,CAACF,WAAW,GAAG,EAAE,CAAE,IAAGA,WAAW,GAAG,EAAG,GAAE;AAC/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}