{"ast":null,"code":"var _jsxFileName = \"/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/views/render/presets.tsx\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RenderPresets = props => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 2,\n    className: \"cell-list\",\n    children: props.presets.map((preset, i) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n      className: \"p-2\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        onClick: () => {\n          props.activatePresetByID(i);\n        },\n        className: preset.active ? \"cell active\" : \"cell disabled\",\n        children: preset.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = RenderPresets;\nvar _c;\n$RefreshReg$(_c, \"RenderPresets\");","map":{"version":3,"names":["Container","Grid","jsxDEV","_jsxDEV","RenderPresets","props","columns","className","children","presets","map","preset","i","Column","onClick","activatePresetByID","active","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlosamaral/Library/Mobile Documents/com~apple~CloudDocs/codeverse/Untitled/frontend/src/app/views/render/presets.tsx"],"sourcesContent":["import { Container, Grid } from \"semantic-ui-react\";\nimport { ParkingLot } from \"../../interfaces/parking-lot\";\n\nexport interface RenderPresetsProps {\n  presets: ParkingLot[];\n  activatePresetByID: Function;\n}\n\nexport const RenderPresets = (props: RenderPresetsProps) => {\n  return (\n    <Grid columns={2} className=\"cell-list\">\n      {props.presets.map((preset, i) => (\n        <Grid.Column className=\"p-2\">\n          <Container\n            onClick={() => {\n              props.activatePresetByID(i);\n            }}\n            className={preset.active ? \"cell active\" : \"cell disabled\"}\n            key={i}\n          >\n            {preset.name}\n          </Container>\n        </Grid.Column>\n      ))}\n    </Grid>\n  );\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpD,OAAO,MAAMC,aAAa,GAAIC,KAAyB,IAAK;EAC1D,oBACEF,OAAA,CAACF,IAAI;IAACK,OAAO,EAAE,CAAE;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACpCH,KAAK,CAACI,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAC3BT,OAAA,CAACF,IAAI,CAACY,MAAM;MAACN,SAAS,EAAC,KAAK;MAAAC,QAAA,eAC1BL,OAAA,CAACH,SAAS;QACRc,OAAO,EAAEA,CAAA,KAAM;UACbT,KAAK,CAACU,kBAAkB,CAACH,CAAC,CAAC;QAC7B,CAAE;QACFL,SAAS,EAAEI,MAAM,CAACK,MAAM,GAAG,aAAa,GAAG,eAAgB;QAAAR,QAAA,EAG1DG,MAAM,CAACM;MAAI,GAFPL,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACC,EAAA,GAlBWlB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}